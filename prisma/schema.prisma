// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  goals     Goal[]
  projects  Project[]
  tasks     Task[]
  reviews   Review[]

  @@map("users")
}

model Goal {
  id          String    @id @default(cuid())
  title       String
  description String?
  stage       GoalStage
  deadline    DateTime?
  status      GoalStatus @default(ACTIVE)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  userId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  projects    Project[] @relation("GoalProjects")

  @@map("goals")
}

model Project {
  id          String        @id @default(cuid())
  name        String
  description String?
  status      ProjectStatus @default(ACTIVE)
  startDate   DateTime?
  endDate     DateTime?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  userId      String
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  goals       Goal[]        @relation("GoalProjects")
  tasks       Task[]
  reviews     Review[]      @relation("ProjectReviews")

  @@map("projects")
}

model Task {
  id          String    @id @default(cuid())
  title       String
  description String?
  completed   Boolean   @default(false)
  priority    Priority  @default(MEDIUM)
  dueDate     DateTime?
  completedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  userId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  projectId   String?
  project     Project?  @relation(fields: [projectId], references: [id], onDelete: SetNull)

  @@map("tasks")
}

model Review {
  id        String     @id @default(cuid())
  content   String
  type      ReviewType
  tags      String[]
  mood      Int?       @default(5)
  insights  String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  userId    String
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  projects  Project[]  @relation("ProjectReviews")

  @@map("reviews")
}

enum GoalStage {
  LIFE
  YEARLY
  QUARTER
}

enum GoalStatus {
  ACTIVE
  PAUSED
  COMPLETED
  ARCHIVED
}

enum ProjectStatus {
  ACTIVE
  PAUSED
  COMPLETED
  ARCHIVED
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

enum ReviewType {
  DAILY
  WEEKLY
  MONTHLY
  PROJECT
}
